# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserEntity {
  id: ID!
  firstName: String!
  lastName: String!
  rut: String!
  email: String!
  role: UserRoles!
  password: String!
}

"""The roles a user can have in the system"""
enum UserRoles {
  Student
  Teacher
  Admin
  Parents
}

type AuthResponse {
  token: String!
  message: String!
  verificacion: Boolean!
  email: String!
  id: Float!
}

type Query {
  """Busca un usuario por RUT"""
  findByRut(rut: String!): UserEntity!
  getAllUser: [UserEntity!]!

  """Obtiene todos los usuarios con rol de student"""
  getAllStudents: [UserEntity!]!
}

type Mutation {
  """Create a new user (either student or teacher)"""
  createUser(createUserDto: CreateUserDto!): UserEntity!
  removeUser(rut: String!): Boolean!

  """Actualiza un usuario"""
  updateUser(rut: String!, updateUserDto: UpdateUserDto!): UserEntity!
  register(registerDto: RegisterDto!): AuthResponse!
  login(email: String!, password: String!): AuthResponse!

  """Solicita un enlace para restablecer la contraseña"""
  forgotPassword(forgotPassDto: ForgotPassDto!): String!

  """Restablece la contraseña utilizando un token"""
  resetPassword(resetPasswordDto: ResetPasswordDto!): String!
}

input CreateUserDto {
  firstName: String!
  lastName: String!
  rut: String!
  email: String!
  role: UserRoles!
  password: String!
}

input UpdateUserDto {
  firstName: String
  lastName: String
  email: String
}

input RegisterDto {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  rut: String!
}

input ForgotPassDto {
  email: String!
}

input ResetPasswordDto {
  token: String!
  newPassword: String!
}